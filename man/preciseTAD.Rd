% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preciseTAD.R
\name{preciseTAD}
\alias{preciseTAD}
\title{Precise TAD boundary prediction at base pair resolution using density-based
spatial clustering}
\usage{
preciseTAD(
  bounds.GR,
  genomicElements.GR,
  featureType = "distance",
  CHR,
  chromCoords = NULL,
  tadModel,
  threshold,
  flank = NULL,
  verbose = TRUE,
  seed = 123,
  parallel = FALSE,
  cores = NULL,
  splits = NULL,
  DBSCAN = TRUE,
  DBSCAN_params,
  method.Clust = NULL,
  PTBR = TRUE,
  CLARA = TRUE,
  method.Dist = "euclidean",
  samples = 100,
  juicer = FALSE
)
}
\arguments{
\item{bounds.GR}{a GRanges object with chromosomal coordinates of TAD
boundaries used to identify positive cases (can be obtained using
\code{\link{extractBoundaries}})}

\item{genomicElements.GR}{a GRangesList object containing GRanges objects
for each ChIP-seq data to leverage in the random forest model (can be
obtained using the \code{\link{bedToGRangesList}})}

\item{featureType}{Character, controls how the feature space is constructed
(one of either "binary", "oc", "op", or "distance" (log2- transformed);
default is "distance")}

\item{CHR}{Character, which chromosome to predict boundaries on at base pair
resolution}

\item{chromCoords}{List containing the starting bp coordinate and ending bp
coordinate that defines the region of the linear genome to make predictions
on. If chromCoords is not specified then predictions will be made on the
entire chromosome (default is NULL)}

\item{tadModel}{train object, a predicitive model (examples include
randomForest, glmnet, glm, etc) used to obtain predicted probabilities for
each base pair in CHR of being a potential TAD boundary (for a random forest
model, can be obtained using \code{\link{TADrandomForest}})}

\item{threshold}{a numeric cutoff value used to dentote the base pairs that
are potential TAD boundaries. Base pairs with predicted probabilities that
are greater than or equal to this value are labeled as potential TAD
boundaries}

\item{flank}{Numeric, by hopw much to flank the final predicted TAD
boundaries and the called TAD boundaries (default is NULL i.e. no flanking)}

\item{verbose}{Logical, whether or not to print progress}

\item{seed}{Numeric for reproducibility}

\item{parallel}{Logical for whether or not to parallelise the process for
obtaining predicted probabilities}

\item{cores}{Numeric, number of cores to use in parallel}

\item{splits}{Numeric, number of splits of the test data to speed up
prediction}

\item{DBSCAN}{Logical for whether or not to use \code{\link{dbscan}} instead
of agglomerative hierarchical clustering \code{\link{hclust}} when clustering
pairwise genomic distance. Default is TRUE}

\item{DBSCAN_params}{List, 1) eps and 2) MinPts values to be passed to the
\code{\link{dbscan}} function}

\item{method.Clust}{Characater, value passed to `hclust` function (default
is NULL, indicating to use DBSCAN instead)}

\item{PTBR}{Logical for whether or not to include PTBRs along with predicted
boundaries}

\item{CLARA}{Logical for whether or not CLARA (\code{\link{clara}}) should
be used instead of PAM (\code{\link{pam}}). Default is TRUE}

\item{method.Dist}{Character, distance metric passed to \code{\link{clara}}
or \code{\link{pam}} (if CLARA=FALSE). Default is "euclidean"}

\item{samples}{Numeric, number of subsamples to apply CLARA partitioning on
Default is 100. Ignored if CLARA=FALSE}

\item{juicer}{Logical indicating whether predicted boundaries should be
returned in a format that allows for plotting in juicebox from Aiden Lab}
}
\value{
A list object containing 3 components: 1) the genomic coordinates of
PTBRs as a GRanges object, the genomic coordinates of preciseTAD predicted
boundaries as a GRanges object, and 3) the genomic coordinates of the called
boundaries used to make predictions as a GRanges object
}
\description{
Precise TAD boundary prediction at base pair resolution using density-based
spatial clustering
}
\examples{
\dontrun{
#Read in ARROWHEAD-called TADs at 5kb
data(arrowhead_gm12878_5kb)

#Extract unique boundaries
bounds.GR <- extractBoundaries(domains.mat=arrowhead_gm12878_5kb,
                               preprocess=FALSE,
                               CHR=c("CHR21","CHR22"),
                               resolution=5000)

#Read in GRangesList of 26 TFBS
data(tfbsList)

#Create the binned data matrix for CHR1 (training) and CHR22 (testing)
#using:
##5 kb binning,
##distance-type predictors from 26 different TFBS from the GM12878 cell line,
##and random under-sampling
tadData <- createTADdata(bounds.GR=bounds.GR,
                         resolution=5000,
                         genomicElements.GR=tfbsList,
                         featureType="distance",
                         resampling="rus",
                         trainCHR="CHR21",
                         predictCHR="CHR22",
                         seed=123)

#Perform random forest using TADrandomForest by tuning mtry over 10 values
using 3-fold CV
tadModel <- TADrandomForest(trainData=tadData[[1]],
                            testData=tadData[[2]],
                            tuneParams=list(mtry=c(2,
                                                   5,
                                                   8,
                                                   10,
                                                   13,
                                                   16,
                                                   18,
                                                   21,
                                                   24,
                                                   26),
                                            ntree=500,
                                            nodesize=1),
                            cvFolds=3,
                            cvMetric="Accuracy",
                            verbose=TRUE,
                            seed=123,
                            model=TRUE,
                            importances=TRUE,
                            impMeasure="MDA",
                            performances=TRUE)

bounds.GR <- extractBoundaries(domains.mat=arrowhead_gm12878_5kb,
                               preprocess=FALSE,
                               CHR="CHR22",
                               resolution=5000)

#Apply preciseTAD on a specific 2mb section of CHR22:17000000-19000000
pt <- preciseTAD(bounds.GR=bounds.GR,
                 genomicElements.GR=tfbsList,
                 featureType="distance",
                 CHR="CHR22",
                 chromCoords=list(17000000,19000000),
                 tadModel=tadModel[[1]],
                 threshold=1.0,
                 flank=NULL,
                 verbose=TRUE,
                 seed=123,
                 parallel=TRUE,
                 cores=4,
                 splits=4,
                 DBSCAN=TRUE,
                 DBSCAN_params=list(5000,3),
                 method.Clust=NULL,
                 PTBR=TRUE,
                 CLARA=TRUE,
                 method.Dist="euclidean",
                 samples=100,
                 juicer=FALSE)
}
}
