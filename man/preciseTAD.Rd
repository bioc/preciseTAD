% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preciseTAD.R
\name{preciseTAD}
\alias{preciseTAD}
\title{Precise TAD boundary prediction at base pair resolution using density-based
spatial clustering and partitioning techniques}
\usage{
preciseTAD(
  bounds.GR,
  genomicElements.GR,
  featureType = "distance",
  CHR,
  chromCoords = NULL,
  tadModel,
  threshold,
  flank = NULL,
  verbose = TRUE,
  seed = 123,
  parallel = FALSE,
  cores = NULL,
  splits = NULL,
  DBSCAN = TRUE,
  DBSCAN_params,
  method.Clust = NULL,
  PTBR = TRUE,
  CLARA = TRUE,
  method.Dist = "euclidean",
  samples = 100,
  juicer = FALSE
)
}
\arguments{
\item{bounds.GR}{\code{GRanges} object with chromosomal coordinates
of TAD boundaries used to identify positive cases in a binary classification.
framework (can be obtained using \code{\link{extractBoundaries}})}

\item{genomicElements.GR}{\code{GRangesList} object containing GRanges from
each ChIP-seq BED file that was used to train a predictive model (can be
obtained using the \code{\link{bedToGRangesList}}).}

\item{featureType}{Controls how the feature space is constructed (one of
either "binary", "oc", "op", or "distance" (log2- transformed). Default is
"distance".}

\item{CHR}{Controls which chromosome to predict boundaries on at base pair
resolution.}

\item{chromCoords}{List containing the starting bp coordinate and ending bp
coordinate that defines the region of the linear genome to make predictions
on. If chromCoords is not specified then predictions will be made on the
entire chromosome. Default is NULL.}

\item{tadModel}{Model object used to obtain predicted probabilities at base
pair resolution (examples include \code{gbm}, \code{glmnet},
\code{svm}, \code{glm}, etc). For a random forest model, can be obtained
using \code{preciseTAD::randomForest}).}

\item{threshold}{Base pairs with predicted probabilities that are greater
than or equal to this value are labeled as potential TAD boundaries. Values
in the range of .95-1.0 are suggested.}

\item{flank}{Controls how much to flank the final predicted TAD boundaries
(necessary for evaluating overlaps, etc.). Default is NULL, i.e. no flanking.}

\item{verbose}{Option to print progress.}

\item{seed}{Numeric for reproducibility.}

\item{parallel}{Option to parallelise the process for obtaining predicted
probabilities. Default is FALSE.}

\item{cores}{Number of cores to use in parallel. Default is NULL.}

\item{splits}{Number of splits of the test data to speed up prediction.
Default is NULL.}

\item{DBSCAN}{Whether or not to use \code{\link{dbscan}} instead of
agglomerative hierarchical clustering (\code{\link{hclust}}) when clustering
pairwise genomic distance. Default is TRUE.}

\item{DBSCAN_params}{Parameters passed to \code{\link{dbscan}} in list form
containing 1) eps and 2) MinPts.}

\item{method.Clust}{The agglomeration method to be passed to
\code{\link{hclust}}. Default is NULL, indicating to use DBSCAN instead.}

\item{PTBR}{Option to include PTBRs along with predicted boundaries. Default
is TRUE.}

\item{CLARA}{Option to use CLARA (\code{\link{clara}}) instead of PAM
(\code{\link{pam}}). Default is TRUE.}

\item{method.Dist}{Distance metric passed to \code{\link{clara}} or
\code{\link{pam}} (if CLARA=FALSE). Default is "euclidean".}

\item{samples}{Number of subsamples if applying CLARA. Default is 100.
Ignored if CLARA=FALSE.}

\item{juicer}{Option to return predicted boundaries in a format that allows
for plotting in juicebox from Aiden Lab.}
}
\value{
A list of at most 3 \code{GRanges} objects including: 1) the genomic
coordinates of PTBRs (if PTBR=TRUE), the genomic coordinates of preciseTAD
predicted boundaries, and 3) the genomic coordinates of the called boundaries
used to make predictions.
}
\description{
Precise TAD boundary prediction at base pair resolution using density-based
spatial clustering and partitioning techniques
}
\examples{
\dontrun{
# Read in ARROWHEAD-called TADs at 5kb
data(arrowhead_gm12878_5kb)

# Extract unique boundaries
bounds.GR <- extractBoundaries(domains.mat = arrowhead_gm12878_5kb,
                               preprocess = FALSE,
                               CHR = c("CHR21", "CHR22"),
                               resolution = 5000)

# Read in GRangesList of 26 TFBS
data(tfbsList)

# Create the binned data matrix for CHR1 (training) and CHR22 (testing)
# using 5 kb binning, distance-type predictors from 26 different TFBS from
# the GM12878 cell line, and random under-sampling
tadData <- createTADdata(bounds.GR = bounds.GR,
                         resolution = 5000,
                         genomicElements.GR = tfbsList,
                         featureType = "distance",
                         resampling = "rus",
                         trainCHR = "CHR21",
                         predictCHR = "CHR22",
                         seed = 123)

# Perform random forest using TADrandomForest by tuning mtry over 10 values
# using 3-fold CV
tadModel <- TADrandomForest(trainData = tadData[[1]],
                            testData = tadData[[2]],
                            tuneParams = list(mtry = c(2, 5, 8, 10, 13, 16, 18, 21, 24, 26),
                                            ntree = 500,
                                            nodesize = 1),
                            cvFolds = 3,
                            cvMetric = "Accuracy",
                            verbose = TRUE,
                            seed = 123,
                            model = TRUE,
                            importances = TRUE,
                            impMeasure = "MDA",
                            performances = TRUE)

bounds.GR <- extractBoundaries(domains.mat = arrowhead_gm12878_5kb,
                               preprocess = FALSE,
                               CHR = "CHR22",
                               resolution = 5000)

# Apply preciseTAD on a specific 2mb section of CHR22:17000000-19000000
pt <- preciseTAD(bounds.GR = bounds.GR,
                 genomicElements.GR = tfbsList,
                 featureType = "distance",
                 CHR = "CHR22",
                 chromCoords = list(17000000, 19000000),
                 tadModel = tadModel[[1]],
                 threshold = .95,
                 flank = NULL,
                 verbose = TRUE,
                 seed = 123,
                 parallel = TRUE,
                 cores = 4,
                 splits = 4,
                 DBSCAN = TRUE,
                 DBSCAN_params = list(5000, 3),
                 method.Clust = NULL,
                 PTBR = TRUE,
                 CLARA = TRUE,
                 method.Dist = "euclidean",
                 samples = 100,
                 juicer = FALSE)
}
}
